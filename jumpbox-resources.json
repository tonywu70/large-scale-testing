{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "commonSettings": {
      "type": "object"
    },
    "osSettings": {
      "type": "object"
    },
    "storageSettings": {
      "type": "object"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "subnet": {
      "type": "object"
    }
  },
  "variables": {
    "vmStorageAccountContainerName": "vhd",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "storageAccountName": "[parameters('storageSettings').name]",
    "nicName": "[concat(parameters('commonSettings').namespace, 'nic')]",
    "vmName": "[concat(parameters('commonSettings').namespace, 'vm')]",
    "publicIpName": "[concat(parameters('commonSettings').namespace, 'publicIp')]",
    "vmSize": "Standard_D14_V2",
    "availabilitySetName": "jumpboxAvailabilitySet",
    "adminUsername": "[parameters('commonSettings').adminUsername]",
    "vmCount": 1
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location":"[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "true"
      }
    },
    {
      "apiVersion": "2016-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIpName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "ipCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
      }
    },
    {
      "apiVersion": "2016-07-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('publicIpName'), copyindex()))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpName'), copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyindex())]"
      ],
      "copy": {
        "name": "vmCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "plan": {
                "name": "7_2",
                "product": "[parameters('osSettings').imageReference.offer]",
                "publisher": "[parameters('osSettings').imageReference.publisher]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyindex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[parameters('commonSettings').sshKeyPath]",
                  "keyData": "[parameters('commonSettings').sshKeyData]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference":
          {
            "publisher": "[parameters('osSettings').imageReference.publisher]",
            "offer": "[parameters('osSettings').imageReference.offer]",
            "sku": "[parameters('osSettings').imageReference.sku]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('osDiskj', variables('vmName'), copyindex())]",
            "createOption": "fromImage"
          },
          "dataDisks": [
          {
           "lun": 0,
            "name": "[concat('jumpbox', 'datadisk1', copyIndex())]",
            "diskSizeGB": "512",
            "createOption": "empty"
          }
        ]
      },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()))]"
            }
           ],           
          "inputEndpoints": [
            {
              "enableDirectServerReturn": "False",
              "endpointName": "SSH",
              "privatePort": 22,
              "publicPort": 22,
              "protocol": "tcp"
            }
          ]
        } 
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyindex(), '/jumpbox_install')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyindex())]"
      ],
      "copy": {
        "name": "scriptCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[parameters('osSettings').scripts]",
          "commandToExecute": "[concat('bash jump_install.sh')]"
        }
      }
    }
  ],
  "outputs": {}
}
